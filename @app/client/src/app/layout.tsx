import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import "antd/dist/reset.css";

import { ApolloWrapper } from "@/applib/ApolloWrapper";
import { ConfigProvider, notification } from "antd";
import { AntdRegistry } from "@ant-design/nextjs-registry";
import * as React from "react";
import theme from "./themeConfig";
import Providers from "./providers";

// declare global {
//   interface Window {
//     __GRAPHILE_APP__: {
//       ROOT_URL?: string;
//       T_AND_C_URL?: string;
//     };
//   }
// }
//
// if (typeof window !== "undefined") {
//   const nextDataEl = document.getElementById("__NEXT_DATA__");
//   if (!nextDataEl || !nextDataEl.textContent) {
//     throw new Error("Cannot read from __NEXT_DATA__ element");
//   }
//   const data = JSON.parse(nextDataEl.textContent);
//   window.__GRAPHILE_APP__ = {
//     ROOT_URL: data.query.ROOT_URL,
//     T_AND_C_URL: data.query.T_AND_C_URL,
//   };
// }

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en">
      <body className={`${geistSans.variable} ${geistMono.variable}`}>
        <AntdRegistry>
          <ConfigProvider theme={theme}>
            <ApolloWrapper>
              <Providers>{children}</Providers>
            </ApolloWrapper>
          </ConfigProvider>
        </AntdRegistry>
      </body>
    </html>
  );
}
