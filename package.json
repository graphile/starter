{
  "name": "ROOT",
  "projectName": "My_Project_Here",
  "version": "3.0.1",
  "private": true,
  "description": "Description of project here",
  "scripts": {
    "setup": "npm run && npm run setup:env auto && npm run setup:db && npm run setup:packages",
    "setup:env": "node ./scripts/setup_env.js",
    "setup:db": "node ./scripts/setup_db.js",
    "setup:packages": "npm run workspaces foreach --verbose --topological --exclude ROOT --exclude docker-helpers run setup",
    "start": "node ./scripts/start.js",
    "pretest": "npm run workspaces foreach --verbose --topological --exclude ROOT --exclude docker-helpers run pretest",
    "test": "node scripts/test.js",
    "posttest": "npm run workspaces foreach --verbose --topological --exclude ROOT --exclude docker-helpers run posttest",
    "test:watch": "node scripts/test.js --watch",
    "lint": "tsc -b && npm run prettier:all --check && npm run eslint .",
    "lint:fix": "npm run eslint --fix . && npm run prettier:all --write",
    "eslint": "eslint --ext .js,.jsx,.ts,.tsx,.graphql",
    "prettier:all": "prettier --ignore-path .eslintignore \"**/*.{js,jsx,ts,tsx,graphql,md}\"",
    "depcheck": "npm run workspaces foreach --verbose --topological --exclude ROOT --exclude docker-helpers exec depcheck --ignores=\"@app/config,@app/client,tslib,webpack,babel-plugin-import,source-map-support,@graphql-codegen/*,*eslint*,@typescript-eslint/*,graphql-toolkit,net,tls,dayjs,@types/jest,babel-jest,jest,mock-req,mock-res,nodemon,ts-jest,ts-loader,ts-node,update-dotenv,mkdirp,@types/helmet,helmet\" --ignore-dirs=\".next\"",
    "dev": "npm run && npm run workspaces foreach --verbose --topological --exclude ROOT --exclude docker-helpers run codegen && tsc -b && concurrently --kill-others --names \"TSC,WATCH,RUN,TEST\" --prefix \"({name})\" --prefix-colors \"yellow.bold,yellow.bold,cyan.bold,greenBright.bold\" \"tsc -b --watch --preserveWatchOutput\" \"npm run workspaces foreach --verbose --parallel --interlaced --exclude ROOT --exclude docker-helpers run watch\" \"npm run workspaces foreach --verbose --parallel --interlaced --exclude ROOT --exclude docker-helpers run dev\" \"npm run test:watch --delay 10\"",
    "build": "npm run workspaces foreach --verbose --topological --exclude ROOT --exclude docker-helpers run build",
    "clean": "node ./scripts/clean.js",
    "reset": "npm run clean && node ./scripts/delete-env-file.js",
    "--shortcuts to run commands in workspaces--": "",
    "client": "npm run workspace @app/client",
    "components": "npm run workspace @app/components",
    "db": "npm run workspace @app/db",
    "e2e": "npm run workspace @app/e2e",
    "graphql": "npm run workspace @/appgraphqlgenerated",
    "server": "npm run workspace @app/server",
    "worker": "npm run workspace @app/worker",
    "docker": "npm run workspace docker-helpers",
    "docker-compose": "npm run workspace docker-helpers compose"
  },
  "author": "Benjie Gillam <code@benjiegillam.com>",
  "license": "SEE LICENSE IN LICENSE.md",
  "dependencies": {
    "abort-controller": "^3.0.0",
    "graphql": "^16.10.0"
  },
  "devDependencies": {
    "@babel/core": "^7.26.10",
    "@babel/plugin-syntax-import-assertions": "^7.26.0",
    "@babel/preset-env": "^7.26.9",
    "@babel/preset-typescript": "^7.27.0",
    "@types/jest": "^29.5.14",
    "@typescript-eslint/eslint-plugin": "^8.29.1",
    "@typescript-eslint/parser": "^8.29.1",
    "babel-jest": "^29.7.0",
    "concurrently": "^9.1.2",
    "cross-env": "^7.0.3",
    "depcheck": "^1.4.7",
    "dotenv": "^16.4.7",
    "glob": "^11.0.1",
    "inquirer": "^12.5.2",
    "jest": "^29.7.0",
    "mock-req": "^0.2.0",
    "mock-res": "^0.6.0",
    "node-fetch": "^3.3.2",
    "nodemon": "^3.1.9",
    "pg": "^8.14.1",
    "prettier": "^3.5.3",
    "rimraf": "^6.0.1",
    "ts-jest": "^29.3.1",
    "ts-loader": "^9.5.2",
    "ts-node": "^10.9.2",
    "typescript": "^5.8.3",
    "update-dotenv": "^1.1.1"
  },
  "resolutions": {
    "graphql": "15.x",
    "pg-connection-string": "2.x"
  },
  "workspaces": {
    "packages": [
      "@app/*",
      "docker"
    ],
    "installConfig": {
      "hoistingLimits": [
        "**/cypress"
      ]
    }
  },
  "prettier": {
    "trailingComma": "es5",
    "proseWrap": "always",
    "overrides": [
      {
        "files": [
          "*.yml",
          "*.yaml"
        ],
        "options": {
          "printWidth": 120
        }
      }
    ]
  }
}
